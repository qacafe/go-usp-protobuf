// Code generated by protoc-gen-go. DO NOT EDIT.
// source: usp_record/usp-record.proto

/*
Package usp_record is a generated protocol buffer package.

It is generated from these files:
	usp_record/usp-record.proto

It has these top-level messages:
	Record
	NoSessionContextRecord
	SessionContextRecord
*/
package usp_record

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Record_PayloadSecurity int32

const (
	Record_PLAINTEXT Record_PayloadSecurity = 0
	Record_TLS       Record_PayloadSecurity = 1
)

var Record_PayloadSecurity_name = map[int32]string{
	0: "PLAINTEXT",
	1: "TLS",
}
var Record_PayloadSecurity_value = map[string]int32{
	"PLAINTEXT": 0,
	"TLS":       1,
}

func (x Record_PayloadSecurity) String() string {
	return proto.EnumName(Record_PayloadSecurity_name, int32(x))
}
func (Record_PayloadSecurity) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type SessionContextRecord_PayloadSARState int32

const (
	SessionContextRecord_NONE      SessionContextRecord_PayloadSARState = 0
	SessionContextRecord_BEGIN     SessionContextRecord_PayloadSARState = 1
	SessionContextRecord_INPROCESS SessionContextRecord_PayloadSARState = 2
	SessionContextRecord_COMPLETE  SessionContextRecord_PayloadSARState = 3
)

var SessionContextRecord_PayloadSARState_name = map[int32]string{
	0: "NONE",
	1: "BEGIN",
	2: "INPROCESS",
	3: "COMPLETE",
}
var SessionContextRecord_PayloadSARState_value = map[string]int32{
	"NONE":      0,
	"BEGIN":     1,
	"INPROCESS": 2,
	"COMPLETE":  3,
}

func (x SessionContextRecord_PayloadSARState) String() string {
	return proto.EnumName(SessionContextRecord_PayloadSARState_name, int32(x))
}
func (SessionContextRecord_PayloadSARState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{2, 0}
}

type Record struct {
	Version         string                 `protobuf:"bytes,1,opt,name=version" json:"version,omitempty"`
	ToId            string                 `protobuf:"bytes,2,opt,name=to_id,json=toId" json:"to_id,omitempty"`
	FromId          string                 `protobuf:"bytes,3,opt,name=from_id,json=fromId" json:"from_id,omitempty"`
	PayloadSecurity Record_PayloadSecurity `protobuf:"varint,4,opt,name=payload_security,json=payloadSecurity,enum=usp_record.Record_PayloadSecurity" json:"payload_security,omitempty"`
	MacSignature    []byte                 `protobuf:"bytes,5,opt,name=mac_signature,json=macSignature,proto3" json:"mac_signature,omitempty"`
	SenderCert      []byte                 `protobuf:"bytes,6,opt,name=sender_cert,json=senderCert,proto3" json:"sender_cert,omitempty"`
	// Types that are valid to be assigned to RecordType:
	//	*Record_NoSessionContext
	//	*Record_SessionContext
	RecordType isRecord_RecordType `protobuf_oneof:"record_type"`
}

func (m *Record) Reset()                    { *m = Record{} }
func (m *Record) String() string            { return proto.CompactTextString(m) }
func (*Record) ProtoMessage()               {}
func (*Record) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type isRecord_RecordType interface {
	isRecord_RecordType()
}

type Record_NoSessionContext struct {
	NoSessionContext *NoSessionContextRecord `protobuf:"bytes,7,opt,name=no_session_context,json=noSessionContext,oneof"`
}
type Record_SessionContext struct {
	SessionContext *SessionContextRecord `protobuf:"bytes,8,opt,name=session_context,json=sessionContext,oneof"`
}

func (*Record_NoSessionContext) isRecord_RecordType() {}
func (*Record_SessionContext) isRecord_RecordType()   {}

func (m *Record) GetRecordType() isRecord_RecordType {
	if m != nil {
		return m.RecordType
	}
	return nil
}

func (m *Record) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Record) GetToId() string {
	if m != nil {
		return m.ToId
	}
	return ""
}

func (m *Record) GetFromId() string {
	if m != nil {
		return m.FromId
	}
	return ""
}

func (m *Record) GetPayloadSecurity() Record_PayloadSecurity {
	if m != nil {
		return m.PayloadSecurity
	}
	return Record_PLAINTEXT
}

func (m *Record) GetMacSignature() []byte {
	if m != nil {
		return m.MacSignature
	}
	return nil
}

func (m *Record) GetSenderCert() []byte {
	if m != nil {
		return m.SenderCert
	}
	return nil
}

func (m *Record) GetNoSessionContext() *NoSessionContextRecord {
	if x, ok := m.GetRecordType().(*Record_NoSessionContext); ok {
		return x.NoSessionContext
	}
	return nil
}

func (m *Record) GetSessionContext() *SessionContextRecord {
	if x, ok := m.GetRecordType().(*Record_SessionContext); ok {
		return x.SessionContext
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Record) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Record_OneofMarshaler, _Record_OneofUnmarshaler, _Record_OneofSizer, []interface{}{
		(*Record_NoSessionContext)(nil),
		(*Record_SessionContext)(nil),
	}
}

func _Record_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Record)
	// record_type
	switch x := m.RecordType.(type) {
	case *Record_NoSessionContext:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NoSessionContext); err != nil {
			return err
		}
	case *Record_SessionContext:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SessionContext); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Record.RecordType has unexpected type %T", x)
	}
	return nil
}

func _Record_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Record)
	switch tag {
	case 7: // record_type.no_session_context
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(NoSessionContextRecord)
		err := b.DecodeMessage(msg)
		m.RecordType = &Record_NoSessionContext{msg}
		return true, err
	case 8: // record_type.session_context
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SessionContextRecord)
		err := b.DecodeMessage(msg)
		m.RecordType = &Record_SessionContext{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Record_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Record)
	// record_type
	switch x := m.RecordType.(type) {
	case *Record_NoSessionContext:
		s := proto.Size(x.NoSessionContext)
		n += proto.SizeVarint(7<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Record_SessionContext:
		s := proto.Size(x.SessionContext)
		n += proto.SizeVarint(8<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type NoSessionContextRecord struct {
	Payload []byte `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (m *NoSessionContextRecord) Reset()                    { *m = NoSessionContextRecord{} }
func (m *NoSessionContextRecord) String() string            { return proto.CompactTextString(m) }
func (*NoSessionContextRecord) ProtoMessage()               {}
func (*NoSessionContextRecord) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *NoSessionContextRecord) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type SessionContextRecord struct {
	SessionId          uint64                               `protobuf:"varint,1,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	SequenceId         uint64                               `protobuf:"varint,2,opt,name=sequence_id,json=sequenceId" json:"sequence_id,omitempty"`
	ExpectedId         uint64                               `protobuf:"varint,3,opt,name=expected_id,json=expectedId" json:"expected_id,omitempty"`
	RetransmitId       uint64                               `protobuf:"varint,4,opt,name=retransmit_id,json=retransmitId" json:"retransmit_id,omitempty"`
	PayloadSarState    SessionContextRecord_PayloadSARState `protobuf:"varint,5,opt,name=payload_sar_state,json=payloadSarState,enum=usp_record.SessionContextRecord_PayloadSARState" json:"payload_sar_state,omitempty"`
	PayloadrecSarState SessionContextRecord_PayloadSARState `protobuf:"varint,6,opt,name=payloadrec_sar_state,json=payloadrecSarState,enum=usp_record.SessionContextRecord_PayloadSARState" json:"payloadrec_sar_state,omitempty"`
	Payload            [][]byte                             `protobuf:"bytes,7,rep,name=payload,proto3" json:"payload,omitempty"`
}

func (m *SessionContextRecord) Reset()                    { *m = SessionContextRecord{} }
func (m *SessionContextRecord) String() string            { return proto.CompactTextString(m) }
func (*SessionContextRecord) ProtoMessage()               {}
func (*SessionContextRecord) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *SessionContextRecord) GetSessionId() uint64 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

func (m *SessionContextRecord) GetSequenceId() uint64 {
	if m != nil {
		return m.SequenceId
	}
	return 0
}

func (m *SessionContextRecord) GetExpectedId() uint64 {
	if m != nil {
		return m.ExpectedId
	}
	return 0
}

func (m *SessionContextRecord) GetRetransmitId() uint64 {
	if m != nil {
		return m.RetransmitId
	}
	return 0
}

func (m *SessionContextRecord) GetPayloadSarState() SessionContextRecord_PayloadSARState {
	if m != nil {
		return m.PayloadSarState
	}
	return SessionContextRecord_NONE
}

func (m *SessionContextRecord) GetPayloadrecSarState() SessionContextRecord_PayloadSARState {
	if m != nil {
		return m.PayloadrecSarState
	}
	return SessionContextRecord_NONE
}

func (m *SessionContextRecord) GetPayload() [][]byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func init() {
	proto.RegisterType((*Record)(nil), "usp_record.Record")
	proto.RegisterType((*NoSessionContextRecord)(nil), "usp_record.NoSessionContextRecord")
	proto.RegisterType((*SessionContextRecord)(nil), "usp_record.SessionContextRecord")
	proto.RegisterEnum("usp_record.Record_PayloadSecurity", Record_PayloadSecurity_name, Record_PayloadSecurity_value)
	proto.RegisterEnum("usp_record.SessionContextRecord_PayloadSARState", SessionContextRecord_PayloadSARState_name, SessionContextRecord_PayloadSARState_value)
}

func init() { proto.RegisterFile("usp_record/usp-record.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 502 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x93, 0xcd, 0x8e, 0xd3, 0x3e,
	0x14, 0xc5, 0x9b, 0x49, 0xfa, 0x75, 0xfb, 0x95, 0xbf, 0xff, 0x23, 0x88, 0x84, 0x10, 0x51, 0xd9,
	0x94, 0x05, 0x05, 0x95, 0x27, 0x98, 0x89, 0x22, 0x88, 0xe8, 0xa4, 0x95, 0xd3, 0x05, 0x0b, 0xa4,
	0x28, 0x13, 0x1b, 0x14, 0x89, 0xc6, 0xc1, 0x76, 0xd0, 0xf4, 0xe1, 0x90, 0x78, 0x34, 0x14, 0x3b,
	0x69, 0xda, 0x6a, 0x10, 0x12, 0xbb, 0xf8, 0xe7, 0xe3, 0x73, 0xed, 0x73, 0x6f, 0xe0, 0x59, 0x29,
	0x8a, 0x98, 0xd3, 0x94, 0x71, 0xf2, 0xa6, 0x14, 0xc5, 0x6b, 0xfd, 0xb9, 0x2c, 0x38, 0x93, 0x0c,
	0x41, 0xbb, 0x39, 0xff, 0x65, 0x42, 0x0f, 0xab, 0x4f, 0xe4, 0x40, 0xff, 0x07, 0xe5, 0x22, 0x63,
	0xb9, 0x63, 0xb8, 0xc6, 0x62, 0x88, 0x9b, 0x25, 0xfa, 0x1f, 0xba, 0x92, 0xc5, 0x19, 0x71, 0xae,
	0x14, 0xb7, 0x24, 0x0b, 0x08, 0x7a, 0x0a, 0xfd, 0x2f, 0x9c, 0xed, 0x2b, 0x6c, 0x2a, 0xdc, 0xab,
	0x96, 0x01, 0x41, 0x77, 0x60, 0x17, 0xc9, 0xe1, 0x1b, 0x4b, 0x48, 0x2c, 0x68, 0x5a, 0xf2, 0x4c,
	0x1e, 0x1c, 0xcb, 0x35, 0x16, 0xd3, 0xd5, 0x7c, 0xd9, 0x56, 0x5e, 0xea, 0xaa, 0xcb, 0xad, 0x96,
	0x46, 0xb5, 0x12, 0xcf, 0x8a, 0x73, 0x80, 0x5e, 0xc2, 0x64, 0x9f, 0xa4, 0xb1, 0xc8, 0xbe, 0xe6,
	0x89, 0x2c, 0x39, 0x75, 0xba, 0xae, 0xb1, 0x18, 0xe3, 0xf1, 0x3e, 0x49, 0xa3, 0x86, 0xa1, 0x17,
	0x30, 0x12, 0x34, 0x27, 0x94, 0xc7, 0x29, 0xe5, 0xd2, 0xe9, 0x29, 0x09, 0x68, 0xe4, 0x51, 0x2e,
	0x11, 0x06, 0x94, 0xb3, 0x58, 0x50, 0x51, 0x3d, 0x28, 0x4e, 0x59, 0x2e, 0xe9, 0x83, 0x74, 0xfa,
	0xae, 0xb1, 0x18, 0x9d, 0x5f, 0x2b, 0x64, 0x91, 0x16, 0x79, 0x5a, 0xa3, 0xaf, 0xf9, 0xa1, 0x83,
	0xed, 0xfc, 0x62, 0x07, 0x7d, 0x84, 0xd9, 0xa5, 0xe1, 0x40, 0x19, 0xba, 0xa7, 0x86, 0x7f, 0xb0,
	0x9b, 0x8a, 0x33, 0x3e, 0x7f, 0x05, 0xb3, 0x8b, 0x28, 0xd0, 0x04, 0x86, 0xdb, 0xf5, 0x4d, 0x10,
	0xee, 0xfc, 0x4f, 0x3b, 0xbb, 0x83, 0xfa, 0x60, 0xee, 0xd6, 0x91, 0x6d, 0xdc, 0x4e, 0x60, 0xa4,
	0xbd, 0x63, 0x79, 0x28, 0xe8, 0x7c, 0x05, 0x4f, 0x1e, 0xbf, 0x74, 0xd5, 0xd1, 0x3a, 0x4d, 0xd5,
	0xb9, 0x31, 0x6e, 0x96, 0xf3, 0x9f, 0x26, 0x5c, 0x3f, 0x7a, 0xe4, 0x39, 0x40, 0xf3, 0xa6, 0x8c,
	0xa8, 0x39, 0xb0, 0xf0, 0xb0, 0x26, 0x01, 0xd1, 0x39, 0x7f, 0x2f, 0x69, 0x9e, 0xd2, 0x66, 0x1e,
	0xac, 0x2a, 0x67, 0x8d, 0xb4, 0x80, 0x3e, 0x14, 0x34, 0x95, 0x94, 0x34, 0x93, 0x61, 0x61, 0x68,
	0x50, 0x40, 0xaa, 0x76, 0x72, 0x2a, 0x79, 0x92, 0x8b, 0x7d, 0x26, 0x2b, 0x89, 0xa5, 0x24, 0xe3,
	0x16, 0x06, 0x04, 0x7d, 0x86, 0xff, 0x8e, 0x23, 0x94, 0xf0, 0x58, 0xc8, 0x44, 0xea, 0xbe, 0x4f,
	0x57, 0x6f, 0xff, 0x96, 0xed, 0x71, 0xa2, 0x6e, 0x70, 0x54, 0x9d, 0x6b, 0x27, 0x2a, 0xe1, 0x0a,
	0xa0, 0x7b, 0xb8, 0xae, 0x11, 0xa7, 0xe9, 0x49, 0x81, 0xde, 0x3f, 0x16, 0x40, 0xad, 0xdb, 0xb1,
	0xc6, 0x49, 0xf4, 0x7d, 0xd7, 0x3c, 0x8d, 0xde, 0x6b, 0x1b, 0x5d, 0x1b, 0xa0, 0x01, 0x58, 0xe1,
	0x26, 0xf4, 0xed, 0x0e, 0x1a, 0x42, 0xf7, 0xd6, 0x7f, 0x1f, 0x84, 0xb6, 0x51, 0x75, 0x3f, 0x08,
	0xb7, 0x78, 0xe3, 0xf9, 0x51, 0x64, 0x5f, 0xa1, 0x31, 0x0c, 0xbc, 0xcd, 0xdd, 0x76, 0xed, 0xef,
	0x7c, 0xdb, 0xbc, 0xef, 0xa9, 0x3f, 0xf9, 0xdd, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0x26, 0x7c,
	0xc5, 0xe6, 0xe8, 0x03, 0x00, 0x00,
}
